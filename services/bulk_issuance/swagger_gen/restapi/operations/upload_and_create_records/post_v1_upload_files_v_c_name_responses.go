// Code generated by go-swagger; DO NOT EDIT.

package upload_and_create_records

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"bulk_issuance/swagger_gen/models"
)

// PostV1UploadFilesVCNameOKCode is the HTTP code returned for type PostV1UploadFilesVCNameOK
const PostV1UploadFilesVCNameOKCode int = 200

/*PostV1UploadFilesVCNameOK OK

swagger:response postV1UploadFilesVCNameOK
*/
type PostV1UploadFilesVCNameOK struct {

	/*
	  In: Body
	*/
	Payload models.CreateRecordResponse `json:"body,omitempty"`
}

// NewPostV1UploadFilesVCNameOK creates PostV1UploadFilesVCNameOK with default headers values
func NewPostV1UploadFilesVCNameOK() *PostV1UploadFilesVCNameOK {

	return &PostV1UploadFilesVCNameOK{}
}

// WithPayload adds the payload to the post v1 upload files v c name o k response
func (o *PostV1UploadFilesVCNameOK) WithPayload(payload models.CreateRecordResponse) *PostV1UploadFilesVCNameOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post v1 upload files v c name o k response
func (o *PostV1UploadFilesVCNameOK) SetPayload(payload models.CreateRecordResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostV1UploadFilesVCNameOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
