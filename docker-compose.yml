version: "2.4"

services:
  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    healthcheck:
      test: ["CMD", "curl", "-f", "localhost:9200/_cluster/health"]
      interval: 30s
      timeout: 10s
      retries: 4
  db:
    image: postgres
    volumes:
      - ./db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=registry
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
  registry:
    image: dockerhub/sunbird-rc-core:v0.0.9-5
    environment:
      - authentication_enabled=true
      - signature_enabled=false
      - connectionInfo_uri=jdbc:postgresql://db:5432/registry
      - connectionInfo_username=postgres
      - connectionInfo_password=postgres
      - elastic_search_connection_url=es:9200
      - search_providerName=dev.sunbirdrc.registry.service.ElasticSearchService
      - sunbird_sso_realm=sunbird-rc
      - sunbird_sso_url=https://demo-education-registry.xiv.in/auth
      - sunbird_sso_admin_client_id=admin-api
      - sunbird_sso_admin_client_secret=${KEYCLOAK_SECRET}
      - sunbird_sso_client_id=registry-frontend
      - claims_url=http://claim-ms:8082
      - sunbird_keycloak_user_set_password=true
      - sunbird_keycloak_user_password=abcd@123
      - filestorage_connection_url=http://file-storage:9000
      - filestorage_access_key=admin
      - filestorage_secret_key=ced9862ea6
      - filestorage_bucket_key=ndear
      - external_entities=board-cbse
      - sign_url=http://certificate-signer:8079/sign
      - sign_health_check_url=http://certificate-signer:8079/health
      - signature_enabled=true
      - pdf_url=http://certificate-api:8078/api/v1/certificatePDF
      - template_base_url=http://registry:8081/api/v1/templates/ #Looks for certificate templates for pdf copy of the signed certificate
      - registry_base_apis_enable=false
      - logging.level.root=DEBUG
      - enable_external_templates=true
      - async_enabled=false
      - webhook_enabled=false
      - webhook_url=http://localhost:5001/api/v1/callback
    volumes:
      - ${PWD}/schemas:/home/sunbirdrc/config/public/_schemas
    depends_on:
      es:
        condition: service_healthy
      db:
        condition: service_started
  keycloak:
    image: dockerhub/sunbird-rc-keycloak:${RELEASE_VERSION}
    volumes:
      - ${PWD}/imports:/opt/jboss/keycloak/imports
    environment:
      - KEYCLOAK_LOGO=https://svgshare.com/i/hCr.svg
      - DB_VENDOR=postgres
      - DB_ADDR=db
      - DB_PORT=5432
      - DB_DATABASE=registry
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=admin
      - KEYCLOAK_IMPORT=/opt/jboss/keycloak/imports/realm-export.json
      - PROXY_ADDRESS_FORWARDING=true
      - KEYCLOAK_PORTAL_TITLE=Login to Sunbird RC education portal
      - KEYCLOAK_PORTAL_SUB_TITLE=Create and manage your school registeries
    healthcheck:
      test:
        ["CMD-SHELL", "curl -f http://localhost:9990/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      db:
        condition: service_started
  claim-ms:
    image: dockerhub/sunbird-rc-claim-ms:${RELEASE_VERSION}
    environment:
      - connectionInfo_uri=jdbc:postgresql://db:5432/registry
      - connectionInfo_username=postgres
      - connectionInfo_password=postgres
      - sunbirdrc_url=http://registry:8081
      - logging.level.root=DEBUG
    depends_on:
      db:
        condition: service_started
      registry:
        condition: service_started
  file-storage:
    image: quay.io/minio/minio
    volumes:
      - ./minio/data:/data
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=ced9862ea6
    command: server --address 0.0.0.0:9000 --console-address 0.0.0.0:9001 /data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
  public-key-service:
    image: dockerhub/sunbird-rc-public-key-service:${RELEASE_VERSION}
    environment:
      - CONFIG_BASE_PATH=/etc/keys
    healthcheck:
      test: [ "CMD", "curl", "-f", "localhost:3300/api/v1/health" ]
      interval: 30s
      timeout: 10s
      retries: 4
    volumes:
      - ./imports:/etc/keys
  context-proxy-service:
    image: dockerhub/sunbird-rc-context-proxy-service:${RELEASE_VERSION}
    healthcheck:
      test: [ "CMD", "curl", "-f", "localhost:4400/health" ]
      interval: 30s
      timeout: 10s
      retries: 4
  nginx:
    image: dockerhub/sunbird-rc-nginx
    ports:
      - "83:80"